{
  "hash": "a4ab8889c30a2b7f884c9588c83a34e3",
  "result": {
    "engine": "knitr",
    "markdown": "# Time Series with Spline Based Models\n\n> Disclaimer: The original source of the following contents is [here](https://asbates.rbind.io/2019/04/19/time-series-with-spline-based-models/)\n\n## Setup\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(fields)\nlibrary(earth)\nlibrary(mgcv)\nlibrary(forecast)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntheme_set(theme_bw())\n\nflu <- read_csv(\"https://raw.githubusercontent.com/asbates/nonlinear-models/master/data/ilinet-calif-up-to-2019-03-31.csv\") %>% \n  mutate(t = 1:nrow(.))\n\nflu\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 444 × 8\n   week_start  year  week unweighted_ili ilitotal num_of_providers\n   <date>     <dbl> <dbl>          <dbl>    <dbl>            <dbl>\n 1 2010-10-03  2010    40           1.95      632              112\n 2 2010-10-10  2010    41           2.15      742              122\n 3 2010-10-17  2010    42           2.24      766              126\n 4 2010-10-24  2010    43           1.92      666              130\n 5 2010-10-31  2010    44           2.52      887              131\n 6 2010-11-07  2010    45           2.75      906              126\n 7 2010-11-14  2010    46           2.82     1020              131\n 8 2010-11-21  2010    47           3.16      729              134\n 9 2010-11-28  2010    48           2.61      939              135\n10 2010-12-05  2010    49           3.06     1072              135\n# ℹ 434 more rows\n# ℹ 2 more variables: total_patients <dbl>, t <int>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nflu %>% \n  ggplot(aes(week_start, ilitotal)) +\n  geom_line()\n```\n\n::: {.cell-output-display}\n![](time-series-with-spline_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nThree spline based models will be explored here\n\n- Thin plate splines (TPS)\n- Multivariate Additive Regression Splines (MARS)\n- Generalized Additive Models (GAM)\n\nfor modeling the time series data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflu_train <- flu %>% filter(week_start < \"2019-01-01\")\nflu_test <- flu %>% filter(week_start >= \"2019-01-01\")\n\nflu_ts <- ts(flu$ilitotal, frequency = 52)\nflu_ts_train <- flu_ts[1:nrow(flu_train)]\nflu_ts_test <- flu_ts[(nrow(flu_train) + 1):nrow(flu)]\n\n# TPS requires X, Y splitted\nx_train <- flu_train %>% select(t)\ny_train <- flu_train %>% select(ilitotal)\nx_test <- flu_test %>% select(t)\ny_test <- flu_test %>% select(ilitotal)\n```\n:::\n\n\n## First Approach\n\nHere we will model `ilitotal` by considering the time index `t` as the predictor.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ARIMA\narima_mod <- auto.arima(flu_ts_train)\n\n# thin plate spline\ntps_mod <- Tps(x_train, y_train)\n\n# MARS\nmars_mod <- earth(ilitotal ~ t, data = flu_train)\n\n# GAM\ngam_mod <- gam(ilitotal ~ s(t), data = flu_train, method = \"REML\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nflu_train %>% \n  mutate(\n    fitted_arima = fitted(arima_mod),\n    fitted_tps = fitted(tps_mod)[, 1],\n    fitted_mars = fitted(mars_mod)[, 1],\n    fitted_gam = fitted(gam_mod)\n  ) -> flu_train_fitted\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nflu_train_fitted %>% \n  select(week_start, ilitotal, starts_with(\"fitted\")) %>% \n  pivot_longer(cols = starts_with(\"fitted\"), names_to = \"model\", values_to = \"value\") %>% \n  mutate(\n    model = str_remove(model, \"fitted_\")\n  ) %>% \n  ggplot(aes(week_start, ilitotal)) +\n  geom_line() +\n  geom_line(aes(y = value, color = model))\n```\n\n::: {.cell-output-display}\n![](time-series-with-spline_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n- `MARS` and `GAM` are performing very poorly.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflu_test %>% \n  mutate(\n    pred_arima = forecast(arima_mod, h = 13)$mean[1:13],\n    pred_tps = predict(tps_mod, x_test)[, 1]\n  ) -> flu_test_fitted\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nflu_test_fitted %>% \n  select(week_start, ilitotal, starts_with(\"pred\")) %>% \n  pivot_longer(cols = starts_with(\"pred\"), names_to = \"forecast\", values_to = \"value\") %>% \n  mutate(\n    model = str_remove(forecast, \"pred_\")\n  ) %>% \n  ggplot(aes(week_start, ilitotal)) +\n  geom_line() +\n  geom_line(aes(y = value, color = forecast))\n```\n\n::: {.cell-output-display}\n![](time-series-with-spline_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nflu %>% \n  ggplot(aes(week_start, ilitotal)) +\n  geom_line() +\n  geom_line(aes(week_start, pred_arima, color = \"arima\"), data = flu_test_fitted) + \n  geom_line(aes(week_start, pred_tps, color = \"tps\"), data = flu_test_fitted) + \n  scale_color_manual(\n    values = c(\"arima\" = \"blue\", \"tps\" = \"red\"), name = \"model\"\n  )\n```\n\n::: {.cell-output-display}\n![](time-series-with-spline_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n- `ARIMA` and `TPS` are performing very poorly too.\n\n## Second Approach\n\nHere  `week` and `year` will be used as the predictor instead of `t`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx_train <- flu_train %>% select(year, week)\nx_test <- flu_test %>% select(year, week)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# thin plate spline\ntps_mod <- Tps(x_train, y_train)\n\n# MARS\nmars_mod <- earth(ilitotal ~ year + week, data = flu_train)\n\n# GAM\ngam_mod <- gam(ilitotal ~ s(year) + s(week), data = flu_train, method = \"REML\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nflu_train %>% \n  mutate(\n    fitted_tps = fitted(tps_mod)[, 1],\n    fitted_mars = fitted(mars_mod)[, 1],\n    fitted_gam = fitted(gam_mod)\n  ) -> flu_train_fitted\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nflu_train_fitted %>% \n  select(week_start, ilitotal, starts_with(\"fitted\")) %>% \n  pivot_longer(cols = starts_with(\"fitted\"), names_to = \"model\", values_to = \"value\") %>% \n  ggplot(aes(week_start, ilitotal)) +\n  geom_line() +\n  geom_line(aes(y = value, color = model))\n```\n\n::: {.cell-output-display}\n![](time-series-with-spline_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nflu_test %>% \n  mutate(\n    pred_tps = predict(tps_mod, x_test)[, 1],\n    pred_mars = predict(mars_mod, x_test)[, 1],\n    pred_gam = predict(gam_mod, newdata = flu_test)\n  ) -> flu_test_fitted\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nflu_test_fitted %>% \n  select(week_start, ilitotal, starts_with(\"pred\")) %>% \n  pivot_longer(cols = starts_with(\"pred\"), names_to = \"forecast\", values_to = \"value\") %>% \n  ggplot(aes(week_start, ilitotal)) +\n  geom_line() +\n  geom_line(aes(y = value, color = forecast))\n```\n\n::: {.cell-output-display}\n![](time-series-with-spline_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nflu %>% \n  ggplot(aes(week_start, ilitotal)) +\n  geom_line() +\n  geom_line(aes(week_start, pred_tps, color = \"tps\"), data = flu_test_fitted) + \n  geom_line(aes(week_start, pred_mars, color = \"mars\"), data = flu_test_fitted) + \n  geom_line(aes(week_start, pred_gam, color = \"gam\"), data = flu_test_fitted) + \n  scale_color_manual(\n    values = c(\"mars\" = \"blue\", \"tps\" = \"red\", \"gam\" = \"green\"), name = \"model\"\n  )\n```\n\n::: {.cell-output-display}\n![](time-series-with-spline_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n- `TPS` is still doing better compared to the `GAM` and `MARS`.\n\n\n## Third Approach\n\nHere four lags of the `ilitotal` will be used as the predictors.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflu %>% \n  mutate(\n    lag_ilitotal = lag(ilitotal),\n    lag2_ilitotal = lag(ilitotal, n = 2L),\n    lag3_ilitotal = lag(ilitotal, n = 3L),\n    lag4_ilitotal = lag(ilitotal, n = 4L),\n  ) -> lagged_flu\n\nlagged_flu\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 444 × 12\n   week_start  year  week unweighted_ili ilitotal num_of_providers\n   <date>     <dbl> <dbl>          <dbl>    <dbl>            <dbl>\n 1 2010-10-03  2010    40           1.95      632              112\n 2 2010-10-10  2010    41           2.15      742              122\n 3 2010-10-17  2010    42           2.24      766              126\n 4 2010-10-24  2010    43           1.92      666              130\n 5 2010-10-31  2010    44           2.52      887              131\n 6 2010-11-07  2010    45           2.75      906              126\n 7 2010-11-14  2010    46           2.82     1020              131\n 8 2010-11-21  2010    47           3.16      729              134\n 9 2010-11-28  2010    48           2.61      939              135\n10 2010-12-05  2010    49           3.06     1072              135\n# ℹ 434 more rows\n# ℹ 6 more variables: total_patients <dbl>, t <int>, lag_ilitotal <dbl>,\n#   lag2_ilitotal <dbl>, lag3_ilitotal <dbl>, lag4_ilitotal <dbl>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# TPS can't handle NA\nflu_train <- lagged_flu %>% \n  filter(week_start < \"2019-01-01\" & !is.na(lag4_ilitotal))\n  \nflu_test <- lagged_flu %>% filter(week_start >= \"2019-01-01\")\n\n# TPS requires X, Y splited\nx_train <- flu_train %>% select(starts_with(\"lag\"))\ny_train <- flu_train %>% select(ilitotal)\nx_test <- flu_test %>% select(starts_with(\"lag\"))\ny_test <- flu_test %>% select(ilitotal)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntps_mod <- Tps(x_train, y_train)\nmars_mod <- earth(ilitotal ~ lag_ilitotal + lag2_ilitotal + \n                    lag3_ilitotal + lag4_ilitotal, data = flu_train)\n\ngam_mod <- gam(\n  ilitotal ~ s(lag_ilitotal) + s(lag2_ilitotal) + s(lag3_ilitotal) + s(lag4_ilitotal), \n  method = \"REML\",\n  data = flu_train\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nflu_train %>% \n  mutate(\n    fitted_tps = fitted(tps_mod)[, 1],\n    fitted_mars = fitted(mars_mod)[, 1],\n    fitted_gam = fitted(gam_mod)\n  ) -> flu_train_fitted\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nflu_train_fitted %>% \n  select(week_start, ilitotal, starts_with(\"fitted\")) %>% \n  pivot_longer(cols = starts_with(\"fitted\"), names_to = \"model\", values_to = \"value\") %>% \n  ggplot(aes(week_start, ilitotal)) +\n  geom_line() +\n  geom_line(aes(y = value, color = model))\n```\n\n::: {.cell-output-display}\n![](time-series-with-spline_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nflu_test %>% \n  mutate(\n    pred_tps = predict(tps_mod, x_test)[, 1],\n    pred_mars = predict(mars_mod, x_test)[, 1],\n    pred_gam = predict(gam_mod, newdata = flu_test)\n  ) -> flu_test_fitted\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nflu_test_fitted %>% \n  select(week_start, ilitotal, starts_with(\"pred\")) %>% \n  pivot_longer(cols = starts_with(\"pred\"), names_to = \"forecast\", values_to = \"value\") %>% \n  ggplot(aes(week_start, ilitotal)) +\n  geom_line() +\n  geom_line(aes(y = value, color = forecast))\n```\n\n::: {.cell-output-display}\n![](time-series-with-spline_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nflu %>% \n  ggplot(aes(week_start, ilitotal)) +\n  geom_line() +\n  geom_line(aes(week_start, pred_tps, color = \"tps\"), data = flu_test_fitted) + \n  geom_line(aes(week_start, pred_mars, color = \"mars\"), data = flu_test_fitted) + \n  geom_line(aes(week_start, pred_gam, color = \"gam\"), data = flu_test_fitted) + \n  scale_color_manual(\n    values = c(\"mars\" = \"blue\", \"tps\" = \"red\", \"gam\" = \"green\"), name = \"model\"\n  )\n```\n\n::: {.cell-output-display}\n![](time-series-with-spline_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nyardstick::metrics(flu_test_fitted, truth = ilitotal, estimate = pred_tps)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 rmse    standard    269.    \n2 rsq     standard      0.0759\n3 mae     standard    202.    \n```\n\n\n:::\n\n```{.r .cell-code}\nyardstick::metrics(flu_test_fitted, truth = ilitotal, estimate = pred_mars)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 rmse    standard     201.   \n2 rsq     standard       0.306\n3 mae     standard     153.   \n```\n\n\n:::\n\n```{.r .cell-code}\nyardstick::metrics(flu_test_fitted, truth = ilitotal, estimate = pred_gam)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 rmse    standard     219.   \n2 rsq     standard       0.258\n3 mae     standard     170.   \n```\n\n\n:::\n:::\n\n\n- `MARS` is the winner in this case.\n",
    "supporting": [
      "time-series-with-spline_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}