# Time Series Regression Models

## Linear Model

```{r}
#| message: false
library(fpp3)
```


```{r}
us_change %>% 
  pivot_longer(c(Consumption, Income), names_to = "Series") %>% 
  autoplot(value) +
  labs(y = "% change")
```


```{r}
head(us_change)
```

```{r}
us_change %>% 
  model(TSLM(Consumption ~ Income)) %>% 
  report()
```

## Multiple Linear Regression

```{r}
fit_consmr <- us_change %>% 
  model(TSLM(Consumption ~ Income + Production + Unemployment + Savings))

report(fit_consmr)
```

```{r}
augment(fit_consmr) |>
  ggplot(aes(x = Quarter)) +
  geom_line(aes(y = Consumption, colour = "Data")) +
  geom_line(aes(y = .fitted, colour = "Fitted")) +
  labs(y = NULL,
    title = "Percent change in US consumption expenditure"
  ) +
  scale_colour_manual(values=c(Data = "black", Fitted = "#D55E00")) +
  guides(colour = guide_legend(title = NULL))
```


## Evaluating Regression Models

```{r}
fit_consmr %>% gg_tsresiduals()
```


```{r}
us_change %>% 
  left_join(residuals(fit_consmr), by = "Quarter") %>% 
  pivot_longer(Income:Unemployment, names_to = "regressor", values_to = "x") %>% 
  ggplot(aes(x = x, y = .resid)) + 
  geom_point() +
  facet_wrap(. ~ regressor, scales = "free_x") + 
  labs(y = "Residuals", x = NULL)
```



```{r}
augment(fit_consmr) |>
  ggplot(aes(x = .fitted, y = .resid)) +
  geom_point() + labs(x = "Fitted", y = "Residuals")
```


## Some Useful Predictors


```{r}
head(aus_production)
```


```{r}
recent_production <- aus_production %>% 
  filter(year(Quarter) >= 1992)

recent_production %>% 
  autoplot(Beer)
```


```{r}
fit_beer <- recent_production %>% 
  model(TSLM(Beer ~ trend() + season()))

report(fit_beer)
```

There is an average downward trend of -0.34 megalitres per quarter. On average, the second quarter has production of 34.7 megalitres lower than the first quarter, the third quarter has production of 17.8 megalitres lower than the first quarter, and the fourth quarter has production of 72.8 megalitres higher than the first quarter.

```{r}
fourier_beer <- recent_production |>
  model(TSLM(Beer ~ trend() + fourier(K = 2)))

report(fourier_beer)
```

```{r}
glance(fit_consmr) %>% 
  select(adj_r_squared, CV, AIC, AICc, BIC)
```

## Forecasting

```{r}
fc_beer <- forecast(fit_beer)

fc_beer %>% 
  autoplot(recent_production)
```

