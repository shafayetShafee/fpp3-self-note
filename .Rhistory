tps_mod <- Tps(x_train, y_train)
# TPS can't handle NA
flu_train <- lagged_flu %>%
filter(week_start < "2019-01-01" & !is.na(lag4_ilitotal))
flu_test <- lagged_flu %>% filter(week_start >= "2019-01-01")
# TPS requires X, Y splited
x_train <- flu_train %>% select(starts_with("lag"))
y_train <- flu_train %>% select(ilitotal)
x_test <- flu_test %>% select(starts_with("lag"))
y_test <- flu_test %>% select(ilitotal)
tps_mod <- Tps(x_train, y_train)
mars_mod <- earth(ilitotal ~ lag_ilitotal + lag2_ilitotal +
lag3_ilitotal + lag4_ilitotal, data = flu_train)
gam_mod <- gam(
ilitotal ~ s(lag_ilitotal) + s(lag2_ilitotal) + s(lag3_ilitotal) + s(lag4_ilitotal),
method = "REML",
data = flu_train
)
flu_train %>%
mutate(
fitted_tps = fitted(tps_mod)[, 1],
fitted_mars = fitted(mars_mod)[, 1],
fitted_gam = fitted(gam_mod)
) -> flu_train_fitted
flu_test_fitted %>%
select(week_start, ilitotal, starts_with("pred")) %>%
pivot_longer(cols = starts_with("pred"), names_to = "forecast", values_to = "value") %>%
ggplot(aes(week_start, ilitotal)) +
geom_line() +
geom_line(aes(y = value, color = forecast))
flu_train_fitted %>%
select(week_start, ilitotal, starts_with("fitted")) %>%
pivot_longer(cols = starts_with("fitted"), names_to = "model", values_to = "value") %>%
ggplot(aes(week_start, ilitotal)) +
geom_line() +
geom_line(aes(y = value, color = model))
flu_test %>%
mutate(
pred_tps = predict(tps_mod, x_test)[, 1],
pred_mars = predict(mars_mod, x_test)[, 1],
pred_gam = predict(gam_mod, newdata = flu_test)
) -> flu_test_fitted
flu_test_fitted %>%
select(week_start, ilitotal, starts_with("pred")) %>%
pivot_longer(cols = starts_with("pred"), names_to = "forecast", values_to = "value") %>%
ggplot(aes(week_start, ilitotal)) +
geom_line() +
geom_line(aes(y = value, color = forecast))
flu %>%
ggplot(aes(week_start, ilitotal)) +
geom_line() +
geom_line(aes(week_start, pred_tps, color = "tps"), data = flu_test_fitted) +
geom_line(aes(week_start, pred_mars, color = "mars"), data = flu_test_fitted) +
geom_line(aes(week_start, pred_gam, color = "gam"), data = flu_test_fitted) +
scale_color_manual(
values = c("mars" = "blue", "tps" = "red", "gam" = "green"), name = "model"
)
yardstick
install.packages("yardstick")
renv::status()
renv::snapshot()
yardstick::metrics(flu_test, truth = ilitotal, estimate = pred_mars)
yardstick::metrics(flu_test_fitted, truth = ilitotal, estimate = pred_mars)
yardstick::metrics(flu_test_fitted, truth = ilitotal, estimate = pred_gam)
yardstick::metrics(flu_test_fitted, truth = ilitotal, estimate = pred_mars)
yardstick::metrics(flu_test_fitted, truth = ilitotal, estimate = pred_gam)
yardstick::metrics(flu_test_fitted, truth = ilitotal, estimate = pred_tps)
yardstick::metrics(flu_test_fitted, truth = ilitotal, estimate = pred_tps)
yardstick::metrics(flu_test_fitted, truth = ilitotal, estimate = pred_mars)
yardstick::metrics(flu_test_fitted, truth = ilitotal, estimate = pred_gam)
renv::status()
renv::snapshot()
library(tidyverse)
library(mgcv)
#| message: false
library(tidyverse)
library(mgcv)
#| message: false
theme_set(theme_bw())
flu <- read_csv("https://raw.githubusercontent.com/asbates/nonlinear-models/master/data/ilinet-calif-up-to-2019-03-31.csv") %>%
mutate(t = 1:nrow(.))
flu
flu_train <- flu %>% filter(week_start < "2019-01-01")
flu_test <- flu %>% filter(week_start >= "2019-01-01")
flu_train %>%
mutate(
fitted_gam = predict(old_model)
)
old_model <- gam(ilitotal ~ s(week) + s(year), data = flu_train)
flu_train %>%
mutate(
fitted_gam = predict(old_model)
)
flu_train %>%
mutate(
fitted_gam = predict(old_model)
) %>%
ggplot(aes(week_start, ilitotal)) +
geom_line() +
geom_line(aes(y = fittted_gam))
flu_train %>%
mutate(
fitted_gam = predict(old_model)
) %>%
ggplot(aes(week_start, ilitotal)) +
geom_line() +
geom_line(aes(y = fitted_gam))
colors
colorspaces
colours()
flu_train %>%
mutate(
fitted_gam = predict(old_model)
) %>%
ggplot(aes(week_start, ilitotal)) +
geom_line() +
geom_line(aes(y = fitted_gam), color = "maroon")
flu_train %>%
mutate(
fitted_gam = predict(old_model)
) %>%
ggplot(aes(week_start, ilitotal)) +
geom_line() +
geom_line(aes(y = fitted_gam), color = "steelblue1")
flu_train %>%
mutate(
fitted_gam = predict(old_model)
) %>%
ggplot(aes(week_start, ilitotal)) +
geom_line() +
geom_line(aes(y = fitted_gam, color = "steelblue1"))
flu_train %>%
mutate(
fitted_gam = predict(old_model)
) %>%
ggplot(aes(week_start, ilitotal)) +
geom_line() +
geom_line(aes(y = fitted_gam, color = "Fitted GAM"))
flu_train %>%
mutate(
fitted_gam = predict(old_model)
) %>%
ggplot(aes(week_start, ilitotal)) +
geom_line() +
geom_line(aes(y = fitted_gam, color = "Fitted GAM")) +
scale_color_manual(name = "model")
flu_train %>%
mutate(
fitted_gam = predict(old_model)
) %>%
ggplot(aes(week_start, ilitotal)) +
geom_line() +
geom_line(aes(y = fitted_gam, color = "Fitted GAM")) +
scale_color_discrete(name = "model")
?s
flu_train %>%
mutate(time = as.numeric(week_start))
flu_train %>%
mutate(time = as.numeric(week_start)) -> flu_train
flu_test %>%
mutate(time = as.numeric(week_start)) -> flu_test
tp_cc <- gam(ilitotal ~ s(time) + s(week, bs = 'cc', k = 52), data = flu_train)
gp_cc <- gam(ilitotal ~ s(time, bs = 'gp') + s(week, bs = 'cc', k = 52), data = flu_train)
flu_train %>%
mutate(
fitted_tp_cc = predict(tp_cc),
fitted_gp_cc = predict(gp_cc)
) %>%
pivot_longer(cols = starts_with("fitted"), names_to = "model", values_to = value)
flu_train %>%
mutate(
fitted_tp_cc = predict(tp_cc),
fitted_gp_cc = predict(gp_cc)
) %>%
pivot_longer(cols = starts_with("fitted"), names_to = "model", values_to = "value")
flu_train %>%
mutate(
fitted_tp_cc = predict(tp_cc),
fitted_gp_cc = predict(gp_cc)
) %>%
pivot_longer(cols = starts_with("fitted"), names_to = "model", values_to = "value") %>%
ggplot(aes(week_start, ilitotal)) +
geom_line()
flu_train %>%
mutate(
fitted_tp_cc = predict(tp_cc),
fitted_gp_cc = predict(gp_cc)
) %>%
pivot_longer(cols = starts_with("fitted"), names_to = "model", values_to = "value") %>%
ggplot(aes(week_start, ilitotal)) +
geom_line() +
geom_line(aes(y = value, color = model))
flu_train %>%
mutate(
fitted_tp_cc = predict(tp_cc),
fitted_gp_cc = predict(gp_cc)
) %>%
pivot_longer(cols = starts_with("fitted"), names_to = "model", values_to = "value") %>%
ggplot(aes(week_start, ilitotal)) +
geom_line() +
geom_line(aes(y = value, color = model)) +
scale_color_manual(
values = c("fitted_gp_cc" = "maroon")
)
colors()
flu_train %>%
mutate(
fitted_tp_cc = predict(tp_cc),
fitted_gp_cc = predict(gp_cc)
) %>%
pivot_longer(cols = starts_with("fitted"), names_to = "model", values_to = "value") %>%
ggplot(aes(week_start, ilitotal)) +
geom_line() +
geom_line(aes(y = value, color = model)) +
scale_color_manual(
values = c("fitted_gp_cc" = "springgreen3", "fitted_tp_cc" = "steelblue")
)
flu_train %>%
mutate(
fitted_tp_cc = predict(tp_cc),
fitted_gp_cc = predict(gp_cc)
) %>%
pivot_longer(cols = starts_with("fitted"), names_to = "model", values_to = "value") %>%
ggplot(aes(week_start, ilitotal)) +
geom_line() +
geom_line(aes(y = value, color = model)) +
scale_color_manual(
values = c("fitted_gp_cc" = "springgreen3", "fitted_tp_cc" = "red2")
)
methods(predict)
?predict.gam
flu_test %>%
mutate(
pred_tp_cc = predict(tp_cc, newdata = .)
)
flu_test %>%
mutate(
pred_tp_cc = predict(tp_cc)
)
flu_test %>%
mutate(
pred_tp_cc = predict(tp_cc, newdata = .),
pred_gp_cc = predict(gp_cc, newdata = .)
)
flu_test %>%
mutate(
pred_tp_cc = predict(tp_cc, newdata = .),
pred_gp_cc = predict(gp_cc, newdata = .)
) %>%
pivot_longer(cols = starts_with("pred"), names_to = "model", values_to = "value")
flu_test %>%
mutate(
pred_tp_cc = predict(tp_cc, newdata = .),
pred_gp_cc = predict(gp_cc, newdata = .)
) %>%
pivot_longer(cols = starts_with("pred"), names_to = "model", values_to = "value") %>%
ggplot(aes(week_start, ilitotal)) +
geom_line() +
geom_line(aes(y = value, color = model))
flu_test %>%
mutate(
pred_tp_cc = predict(tp_cc, newdata = .),
pred_gp_cc = predict(gp_cc, newdata = .)
) %>%
pivot_longer(cols = starts_with("pred"), names_to = "model", values_to = "value") %>%
ggplot(aes(week_start, ilitotal)) +
geom_line() +
geom_line(aes(y = value, color = model)) +
ylim(0, NA)
resid(tp_cc)
acf(resid(tp_cc))
library(forecast)
forecast::ggAcf(acf(resid(tp_cc)))
Acf(tp_cc)
wineind
acf(resid(tp_cc), plot = FALSE)
forecast::ggAcf(acf(resid(tp_cc), plot = FALSE))
forecast::ggAcf(resid(tp_cc)))
forecast::ggAcf(resid(tp_cc))
forecast::ggAcf(resid(tp_cc)) +
labs(title = "tp smoothed trend")
forecast::ggAcf(resid(gp_cc)) +
labs(title = "tp smoothed trend")
#| layout-ncol: 2
forecast::ggAcf(resid(tp_cc)) +
labs(title = "tp smoothed trend")
forecast::ggAcf(resid(gp_cc)) +
labs(title = "gp smoothed trend")
#| layout-ncol: 2
#| layout-nrow: 2
forecast::ggAcf(resid(tp_cc)) +
labs(title = "tp smoothed trend")
forecast::ggPacf(resid(tp_cc)) +
labs(title = "tp smoothed trend")
forecast::ggAcf(resid(gp_cc)) +
labs(title = "gp smoothed trend")
forecast::ggPacf(resid(gp_cc)) +
labs(title = "gp smoothed trend")
?corARMA
ar0 <- gamm(ilitotal ~ s(time) + s(week, bs = "cc", k = 52), data = flu_train)
ar1 <- gamm(ilitotal ~ s(time) + s(week, bs = "cc", k = 52),
data = flu_train,
correlation = corARMA(form = ~ 1 | year, p = 1))
ar2 <- gamm(ilitotal ~ s(time) + s(week, bs = "cc", k = 52),
data = flu_train,
correlation = corARMA(form = ~ 1 | year, p = 2))
ar3 <- gamm(ilitotal ~ s(time) + s(week, bs = "cc", k = 52),
data = flu_train,
correlation = corARMA(form = ~ 1 | year, p = 3))
ar4 <- gamm(ilitotal ~ s(time) + s(week, bs = "cc", k = 52),
data = flu_train,
correlation = corARMA(form = ~ 1 | year, p = 4))
ar4
?predict.gam
class(ar0)
predict(ar0)
predict(ar0$gam)
install.packages("remotes")
remotes::install_github("m-clark/gammit")
gammit::predict_gamm(ar0)
gammit::predict_gamm(ar0$gam)
tibble(a = gammit::predict_gamm(ar0$gam), b = predict.gam(ar0$gam)) %>% View()
?renv::clean()
renv::snapshot()
flu_train %>%
mutate(
fitted_ar0 = predict(ar0$gam),
fitted_ar1 = predict(ar1$gam),
fitted_ar2 = predict(ar2$gam),
fitted_ar3 = predict(ar3$gam),
fitted_ar4 = predict(ar4$gam)
) %>%
pivot_longer(cols = starts_with("fitted"), names_to = "model", values_to = "value")
flu_train %>%
mutate(
fitted_ar0 = predict(ar0$gam),
fitted_ar1 = predict(ar1$gam),
fitted_ar2 = predict(ar2$gam),
fitted_ar3 = predict(ar3$gam),
fitted_ar4 = predict(ar4$gam)
) %>%
pivot_longer(cols = starts_with("fitted"), names_to = "model", values_to = "value") %>%
ggplot(aes(week_start, ilitotal)) +
geom_line() +
geom_line(aes(y = value, color = model))
anova(ar0$lme, ar1$lme, ar2$lme, ar3$lme, ar4$lme)
acf(resid(ar1$gam))
acf(ar1$gam)
pacf(resid(ar1$gam))
names(ar1)
ar0 <- gamm(ilitotal ~ s(time) + s(week, bs = "cc", k = 52), data = flu_train)
ar1 <- gamm(ilitotal ~ s(time) + s(week, bs = "cc", k = 52),
data = flu_train,
correlation = corARMA(form = ~ 1 | year, p = 1))
ar2 <- gamm(ilitotal ~ s(time) + s(week, bs = "cc", k = 52),
data = flu_train,
correlation = corARMA(form = ~ 1 | year, p = 2))
ar3 <- gamm(ilitotal ~ s(time) + s(week, bs = "cc", k = 52),
data = flu_train,
correlation = corARMA(form = ~ 1 | year, p = 3))
ar4 <- gamm(ilitotal ~ s(time) + s(week, bs = "cc", k = 52),
data = flu_train,
correlation = corARMA(form = ~ 1 | year, p = 4))
flu_train %>%
mutate(
fitted_ar0 = predict(ar0$gam),
fitted_ar1 = predict(ar1$gam),
fitted_ar2 = predict(ar2$gam),
fitted_ar3 = predict(ar3$gam),
fitted_ar4 = predict(ar4$gam)
) %>%
pivot_longer(cols = starts_with("fitted"), names_to = "model", values_to = "value") %>%
ggplot(aes(week_start, ilitotal)) +
geom_line() +
geom_line(aes(y = value, color = model))
anova(ar0$lme, ar1$lme, ar2$lme, ar3$lme, ar4$lme)
pacf(resid(ar1$gam))
flu_test %>%
mutate(
predict_ar1 = predict(ar1$gam, newdata = .)
)
flu_test %>%
mutate(
predict_ar1 = predict(ar1$gam, newdata = .)
) %>%
ggplot(aes(week_start, ilitotal)) +
geom_line()
flu_test %>%
mutate(
predict_ar1 = predict(ar1$gam, newdata = .)
) %>%
ggplot(aes(week_start, ilitotal)) +
geom_line() +
geom_line(aes(y = predict_ar1))
flu_test %>%
mutate(
predict_ar1 = predict(ar1$gam, newdata = .)
) %>%
ggplot(aes(week_start, ilitotal)) +
geom_line() +
geom_line(aes(y = predict_ar1), color = "maroon")
residuals(ar1$gam)
acf(residuals(ar1$gam))
?auto.arima
#| message: false
library(tidyverse)
library(forecast)
library(mgcv)
gam_mod <- gam(ilitotal ~ s(time) + s(week, bs = "cc", k = 52), data = flu_train)
gam_errors <- residuals(gam_mod, type = "response")
error_mod <- auto.arima(gam_errors)
error_mod
checkresiduals(error_mod)
fcast <- gam_fcast + error_fcast
error_fcast <- forecast(error_mod, h = 13)$mean
gam_fcast <- predict(gam_mod, newdata = flu_test)
fcast <- gam_fcast + error_fcast
fcast
as.numeric(fcast)
flu_test %>%
mutate(
fcast = fcast
) %>%
ggplot(aes(week_start, ilitotal)) +
geom_line() +
geom_line(aes(y = fcast), color = "maroon")
pkgs <- c("gratia",
"marginaleffects", "tidybayes",
"viridis", "brms")
# install those packages by setting Ncpus to number of CPU cores you have available
install.packages(pkgs, Ncpus = 2)
renv::status()
renv::snapshot()
install.packages("cmdstanr", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
cmdstanr::cmdstan_path()
# Download and install mvgam
remotes::install_github('nicholasjclark/mvgam', force = TRUE)
# Download and install mvgam
remotes::install_github('nicholasjclark/mvgam', force = TRUE)
# Download and install mvgam
remotes::install_github('nicholasjclark/mvgam', force = TRUE)
# Download and install mvgam
remotes::install_github('nicholasjclark/mvgam', force = TRUE)
library(mgcv)
library(tidyverse)
library(marginaleffects)
library(ggplot2)
library(patchwork)
#| message: false
library(mgcv)
#| message: false
library(mgcv)
library(tidyverse)
library(marginaleffects)
library(ggplot2)
library(patchwork)
theme_set(theme_classic(base_size = 12, base_family = 'serif') +
theme(axis.line.x.bottom = element_line(colour = "black",
size = 1),
axis.line.y.left = element_line(colour = "black",
size = 1),
panel.spacing = unit(0, 'lines'),
legend.margin = margin(0, 0, 0, -15)))
theme_set(theme_classic(base_size = 12, base_family = 'serif') +
theme(axis.line.x.bottom = element_line(colour = "black",
linewidth = 1),
axis.line.y.left = element_line(colour = "black",
linewidth = 1),
panel.spacing = unit(0, 'lines'),
legend.margin = margin(0, 0, 0, -15)))
data(CO2, package = "datasets")
glimpse(CO2)
plot(CO2)
CO2
plot(uptake ~ conc, data = CO2)
hist(uptake)
hist(CO2$uptake)
install.packages("janitor")
CO2 %>%
as_tibble() %>%
janitor::clean_names()
CO2 %>%
as_tibble() %>%
janitor::clean_names() %>%
mutate(plant = factor(plant, ordered = FALSE))
CO2 %>%
as_tibble() %>%
janitor::clean_names() %>%
mutate(plant = factor(plant, ordered = FALSE)) -> plant
model_1 <- gam(
uptake ~ treatment * type +
s(plant, bs = 're') +
s(conc, by = treatment, k = 7),
data = plant,
method = "REML",
family = Gamma(link = "log")
)
summary(model_1)
model_1
plot(model_1)
plot(model_1)
plot(model_1, select = 2, shade = TRUE)
plot(model_1, select = 2, shade = TRUE)
plot(model_1, select = 3, shade = TRUE)
plot_predictions(model_1, condition = "conc")
plot_predictions(model_1, condition = "conc", type = "link")
plot_predictions(model_1, condition = "conc", type = "link") +
labs(
y = "Linear predictor (link scale)",
title = "Average smooth effect of concentration",
subtitle = "Aggregated across treatments and types"
)
